<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper
  PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN"
  "https://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.exam.myapp.bbs.BbsDao">


	<resultMap type="BbsVo" id="BbsMap">
		<id property="bbsNo" column="bbs_no" />
		<result property="bbsTitle" column="bbs_title" />
		<result property="bbsContent" column="bbs_content" />
		<result property="bbsWriter" column="bbs_writer" />
		<result property="bbsRegDate" column="bbs_reg_date" />
		<result property="bbsCount" column="bbs_count" />
		<!--join 조회결과를 담기 위한 resultMap 
		1:1 관계이면 association 엘리먼트를 1:N 관계이면 collection 엘리먼트 사용 -->
<!-- 		<collection property="attachList" ofType="AttachVo"> 
		 	<id property="attNo" column="att_no" />
			<result property="attOrgName" column="att_org_name" />
			<result property="attNewName" column="att_new_name" />
			<result property="attBbsNo" column="att_bbs_no" />
		</collection> -->
		
		<!-- bbs_no 컬럼값을 파라미터로 전달하면서 
		"com.exam.myapp.bbs.AttachDao.selectAttachList" sql문 실행,
		그 결과를 attachList 속성값으로 저장 -->
		<collection property="attachList" ofType="AttachVo"  column="bbs_no"
		select="com.exam.myapp.bbs.AttachDao.selectAttachList"/>
	</resultMap>
 	
 	<sql id="searchCondition">
	 	 <!-- trim 태그 내부에 내용이 있을 경우에만, 내용 앞에 prefix 속성값 추가 -->
	 	 <!-- 내용시작 부분이 prefixOverrides 속성값인 경우 그 부분을 내용에서 삭제 -->
	 	 <trim prefix="WHERE" prefixOverrides="AND |OR ">
		 	 <if test="(searchType=='title' or searchType=='total') and searchWord!=null and searchWord!=''">
		 		 bbs_title LIKE '%' || #{searchWord} || '%' 
		 	 </if>
		 	 <if test="(searchType=='content' or searchType=='total') and searchWord!=null and searchWord!=''">
		 		 or bbs_content LIKE '%' || #{searchWord} || '%' 
		 	 </if>
	 	 </trim>
 	</sql>
 	
 	
 	 <select id="selectBbsList" resultType="BbsVo">
	 		SELECT rnum, bbs_no, bbs_title, bbs_writer, bbs_reg_date, bbs_count
    		FROM(
    			SELECT rownum rnum, bbs_no, bbs_title, bbs_writer, bbs_reg_date, bbs_count
	 			FROM (
	 	 		  SELECT bbs_no, bbs_title, bbs_writer, bbs_reg_date, bbs_count 
	 			  FROM bbs
	 			  <include refid="searchCondition"></include>
	 	 		  ORDER BY bbs_reg_date desc 
	 	 		)	
	 			<![CDATA[WHERE rownum <= #{lastRecordIndex}]]>
    		 )
    		<![CDATA[WHERE #{firstRecordIndex} < rnum]]>
 	 </select>
 	 
 	 <select id="selectBbsCount" resultType="int">
	 	 SELECT count(*)
	 	 FROM bbs
	 	 <include refid="searchCondition"></include>
	 	 
	 	 
 	 </select>
 	 
 	 
 	 <select id="selectBbs" resultMap="BbsMap">
<!-- 	 	 SELECT bbs_no, bbs_title, bbs_content, bbs_writer, bbs_reg_date, bbs_count,
	   		att_no, att_org_name, att_new_name, att_bbs_no
	 	 FROM (
	 	 		SELECT bbs_no, bbs_title, bbs_content, bbs_writer, bbs_reg_date, bbs_count
	 	 		FROM bbs 
	 	 		WHERE bbs_no = #{bbsNo}
	 	 )		
	 	 LEFT OUTER JOIN attach ON bbs_no = att_bbs_no --> 	
	 	 
	 	 SELECT bbs_no, bbs_title, bbs_content, bbs_writer, bbs_reg_date, bbs_count
	 	 FROM bbs 
	 	 WHERE bbs_no = #{bbsNo}
 	 </select>


	<insert id="insertBbs">
	<selectKey keyProperty="bbsNo" resultType="int" order="BEFORE">
		SELECT bbs_seq.NEXTVAL FROM DUAL
	</selectKey>
		insert into bbs (bbs_no, bbs_title, bbs_content, bbs_writer)
		values (#{bbsNo}, #{bbsTitle}, #{bbsContent}, #{bbsWriter})
	</insert>


	<update id="updateBbs">
	update bbs 
	set bbs_title = #{bbsTitle}, bbs_content = #{bbsContent}
	WHERE bbs_no = #{bbsNo} and bbs_writer = #{bbsWriter} 
	</update>
	
	<delete id="deleteBbs">
	delete from bbs where bbs_no = #{bbsNo}
	</delete>

</mapper>